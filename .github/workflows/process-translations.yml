# This workflow processes translation submissions and creates PRs
name: Process Translation Submissions

# When this workflow runs
on:
  # Manual trigger with inputs
  workflow_dispatch:
    inputs:
      translation_file:
        description: 'Path to translation JSON file'
        required: true
        type: string
      translator_name:
        description: 'Name of translator'
        required: true
        type: string
      translator_email:
        description: 'Email of translator'
        required: true
        type: string

  # Trigger when files are added to the queue
  push:
    paths:
      - 'translations-queue/*.json'
    branches:
      - main

# Environment variables available to all jobs
env:
  NODE_VERSION: '18'

# The jobs that run
jobs:
  process-translation:
    name: Process Translation and Create PR
    runs-on: ubuntu-latest

    # Permissions this job needs
    permissions:
      contents: write      # To create branches and commits
      pull-requests: write # To create pull requests
      issues: write        # To add comments

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch full history for better diffs
          fetch-depth: 0
          # Use a PAT for pushing (optional, for protected branches)
          token: ${{ secrets.GITHUB_TOKEN }}

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          npm ci
          # Or if you have specific scripts
          # npm install @octokit/rest csv-parse

      # Step 4: Configure Git
      - name: Configure Git
        run: |
          git config --global user.name "Translation Bot"
          git config --global user.email "translations@yourdomain.com"

      # Step 5: Process the translation file
      - name: Process translations
        id: process
        run: |
          # Run the processing script
          node .github/scripts/process-translations.js \
            --file "${{ github.event.inputs.translation_file || 'auto' }}" \
            --author "${{ github.event.inputs.translator_name || 'Unknown' }}" \
            --email "${{ github.event.inputs.translator_email || 'unknown@example.com' }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 6: Create or update branch
      - name: Create feature branch
        id: branch
        run: |
          # Generate branch name
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          BRANCH_NAME="translations/update-${TIMESTAMP}"
          echo "branch_name=${BRANCH_NAME}" >> $GITHUB_OUTPUT
          
          # Create and checkout new branch
          git checkout -b $BRANCH_NAME
          
          # Add changed files
          git add -A
          
          # Check if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            # Commit changes
            git commit -m "Update translations via automated submission
          
            Translator: ${{ github.event.inputs.translator_name || 'Via Queue' }}
            Email: ${{ github.event.inputs.translator_email || 'N/A' }}
            Timestamp: $(date -u +%Y-%m-%dT%H:%M:%SZ)"
          
            # Push the branch
            git push origin $BRANCH_NAME
          fi

      # Step 7: Create Pull Request
      - name: Create Pull Request
        if: steps.branch.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.branch.outputs.branch_name }}
          title: "üåê Translation Update: ${{ steps.process.outputs.languages }}"
          body: |
            ## Translation Update
            
            This PR contains translation updates submitted via the translation tool.
            
            ### Submission Details
            - **Translator**: ${{ github.event.inputs.translator_name || 'Via Queue' }}
            - **Email**: ${{ github.event.inputs.translator_email || 'N/A' }}
            - **Languages**: ${{ steps.process.outputs.languages }}
            - **Files Modified**: ${{ steps.process.outputs.file_count }}
            - **Translations Updated**: ${{ steps.process.outputs.translation_count }}
            
            ### Changes Summary
            ```
            ${{ steps.process.outputs.summary }}
            ```
            
            ### Checklist
            - [ ] Translations have been reviewed for accuracy
            - [ ] No placeholders or variables were accidentally removed
            - [ ] Character encoding is correct (UTF-8)
            - [ ] File format is valid (.po syntax)
            
            ---
            *This PR was automatically generated by the Translation Tool workflow*
          labels: |
            translations
            automated
            needs-review
          reviewers: |
            translation-reviewers
            ${{ github.repository_owner }}